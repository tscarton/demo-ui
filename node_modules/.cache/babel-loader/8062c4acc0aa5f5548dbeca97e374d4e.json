{"ast":null,"code":"import _classCallCheck from\"/Users/tscarton/Scarton/Pessoal/dev/workspace/spring/demo/demo-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/tscarton/Scarton/Pessoal/dev/workspace/spring/demo/demo-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/tscarton/Scarton/Pessoal/dev/workspace/spring/demo/demo-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/tscarton/Scarton/Pessoal/dev/workspace/spring/demo/demo-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from'react';import'./CustomerManager.scss';import api from\"../../services/api\";import{Table,Button,Modal,ModalHeader,ModalBody,ModalFooter,Col,Form,FormGroup,Label,Input}from'reactstrap';import Moment from'react-moment';import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import{faEdit,faTrash}from'@fortawesome/free-solid-svg-icons';import\"react-datepicker/dist/react-datepicker.css\";var CustomerManager=/*#__PURE__*/function(_React$Component){_inherits(CustomerManager,_React$Component);var _super=_createSuper(CustomerManager);function CustomerManager(props){var _this;_classCallCheck(this,CustomerManager);_this=_super.call(this,props);_this.deleteRow=function(customer){api.post(\"/customers/delete\",customer).then(function(response){var customers=_this.state.customers.filter(function(cust){return cust.email!==customer.email;});_this.setState({customers:customers});_this.closeConfirmDialog();}).catch(function(error){console.log(error);});};_this.closeConfirmDialog=function(e){_this.setState({openConfirmDelete:false});};_this.openConfirmDialog=function(e){_this.setState({openConfirmDelete:true,customerSelected:e});};_this.openEditDialog=function(e){var customerSelected;if(e==null){customerSelected={name:\"\",email:\"\",birthday:new Date()};}else{customerSelected=e;}_this.setState({openEdit:true,customerSelected:customerSelected});};_this.addNewCustomer=function(e){_this.setState({creatingNew:true});_this.openEditDialog(null);};_this.updateCustomer=function(event){event.preventDefault();console.log(\"Customer to update \",_this.state.customerSelected);api.post(\"/customers\",_this.state.customerSelected).then(function(response){var customers=_this.state.customers;customers.push(response.data);_this.setState({customers:customers,creatingNew:false,openEdit:false});}).catch(function(error){// handle error\nconsole.log(error);});};_this.cancelEdit=function(event){event.preventDefault();_this.setState({creatingNew:false,openEdit:false});};_this.state={customers:[],openConfirmDelete:false,openEdit:false,customerSelected:{}};return _this;}_createClass(CustomerManager,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;api.get(\"/customers\").then(function(response){_this2.setState({\"customers\":response.data._embedded.customers});}).catch(function(error){// handle error\nconsole.log(error);});}},{key:\"renderRow\",value:function renderRow(customer){var _this3=this;return/*#__PURE__*/React.createElement(\"tr\",{key:customer.email},/*#__PURE__*/React.createElement(\"td\",null,customer.name),/*#__PURE__*/React.createElement(\"td\",null,customer.email),/*#__PURE__*/React.createElement(\"td\",null,/*#__PURE__*/React.createElement(Moment,{format:\"DD-MMM-YYYY\"},customer.birthday)),/*#__PURE__*/React.createElement(\"td\",{className:\"editRow\"},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faEdit})),/*#__PURE__*/React.createElement(\"td\",{className:\"editRow\",onClick:function onClick(){return _this3.openConfirmDialog(customer);}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faTrash})));}},{key:\"render\",value:function render(){var _this4=this;var _this$state=this.state,openConfirmDelete=_this$state.openConfirmDelete,customerSelected=_this$state.customerSelected,openEdit=_this$state.openEdit,creatingNew=_this$state.creatingNew;return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Button,{color:\"primary\",className:\"addCustomer\",onClick:this.addNewCustomer},\"Add\"),' ',/*#__PURE__*/React.createElement(Table,{striped:true},/*#__PURE__*/React.createElement(\"thead\",null,/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"th\",null,\"Name\"),/*#__PURE__*/React.createElement(\"th\",null,\"Email\"),/*#__PURE__*/React.createElement(\"th\",null,\"Birthday\"),/*#__PURE__*/React.createElement(\"th\",null),/*#__PURE__*/React.createElement(\"th\",null))),/*#__PURE__*/React.createElement(\"tbody\",null,this.state.customers.map(this.renderRow,this))),/*#__PURE__*/React.createElement(Modal,{isOpen:openConfirmDelete},/*#__PURE__*/React.createElement(ModalHeader,null,\"Confirm Delete\"),/*#__PURE__*/React.createElement(ModalBody,null,\"Are you sure to delete the customer \",customerSelected.name,\"?\"),/*#__PURE__*/React.createElement(ModalFooter,null,/*#__PURE__*/React.createElement(Button,{color:\"primary\",onClick:function onClick(){return _this4.deleteRow(customerSelected);}},\"Confirm\"),' ',/*#__PURE__*/React.createElement(Button,{color:\"secondary\"},\"Cancel\"))),/*#__PURE__*/React.createElement(Modal,{isOpen:openEdit},/*#__PURE__*/React.createElement(Form,{className:\"form\",onSubmit:this.updateCustomer},/*#__PURE__*/React.createElement(ModalHeader,null,creatingNew?'New Customer':'Edit Customer'),/*#__PURE__*/React.createElement(ModalBody,null,/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Label,{for:\"name\"},\"Name\"),/*#__PURE__*/React.createElement(Input,{type:\"text\",name:\"name\",id:\"name\",placeholder:\"Name\",required:true,onChange:function onChange(e){customerSelected.name=e.target.value;_this4.setState({customerSelected:customerSelected});}}))),/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Label,{for:\"email\"},\"Email\"),/*#__PURE__*/React.createElement(Input,{type:\"email\",id:\"email\",placeholder:\"email\",required:true,onChange:function onChange(e){customerSelected.email=e.target.value;_this4.setState({customerSelected:customerSelected});}}))),/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Label,{for:\"birthday\"},\"Birthday\"),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(Input,{type:\"date\",id:\"birthday\",placeholder:\"Birthday\",required:true,onChange:function onChange(e){customerSelected.birthday=e.target.value;_this4.setState({customerSelected:customerSelected});}})))),/*#__PURE__*/React.createElement(ModalFooter,null,/*#__PURE__*/React.createElement(Button,{color:\"primary\"},\"Submit\"),' ',/*#__PURE__*/React.createElement(Button,{color:\"secondary\",onClick:this.cancelEdit},\"Cancel\")))));}}]);return CustomerManager;}(React.Component);export default CustomerManager;","map":{"version":3,"sources":["/Users/tscarton/Scarton/Pessoal/dev/workspace/spring/demo/demo-ui/src/components/Customer/CustomerManager.js"],"names":["React","api","Table","Button","Modal","ModalHeader","ModalBody","ModalFooter","Col","Form","FormGroup","Label","Input","Moment","FontAwesomeIcon","faEdit","faTrash","CustomerManager","props","deleteRow","customer","post","then","response","customers","state","filter","cust","email","setState","closeConfirmDialog","catch","error","console","log","e","openConfirmDelete","openConfirmDialog","customerSelected","openEditDialog","name","birthday","Date","openEdit","addNewCustomer","creatingNew","updateCustomer","event","preventDefault","push","data","cancelEdit","get","_embedded","map","renderRow","target","value","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './CustomerManager.scss';\nimport api from \"../../services/api\";\nimport { Table, Button, Modal, ModalHeader, ModalBody, ModalFooter, Col, Form,\n  FormGroup, Label, Input } from 'reactstrap';\nimport Moment from 'react-moment';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEdit, faTrash } from '@fortawesome/free-solid-svg-icons';\n \nimport \"react-datepicker/dist/react-datepicker.css\";\n\nclass CustomerManager extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      customers : [],\n      openConfirmDelete: false,\n      openEdit: false,\n      customerSelected: {}\n    }\n  }\n\n  deleteRow = (customer) => {\n\n    api.post(\"/customers/delete\", customer).then((response) => {\n      let customers = this.state.customers.filter(function(cust) { \n        return cust.email !== customer.email\n      })\n      this.setState({customers: customers});\n      this.closeConfirmDialog();\n    })\n    .catch(function (error) {\n      console.log(error);\n    });\n\n   \n  }\n\n  closeConfirmDialog = e => {\n    this.setState({openConfirmDelete: false});\n  }\n\n  openConfirmDialog = e => {\n    this.setState({openConfirmDelete: true, customerSelected: e});\n  }\n\n  openEditDialog = e => {\n    let customerSelected;\n    if (e == null) {\n      customerSelected = {\n        name: \"\",\n        email: \"\",\n        birthday: new Date()\n      };\n    } else {\n      customerSelected = e;\n    }\n    this.setState({openEdit: true, customerSelected: customerSelected});\n  }\n\n  addNewCustomer = e => {\n    this.setState({creatingNew: true});\n    this.openEditDialog(null);\n  }\n\n  componentDidMount() {\n      api.get(\"/customers\").then((response) => {\n        this.setState({\"customers\": response.data._embedded.customers});\n      })\n      .catch(function (error) {\n        // handle error\n        console.log(error);\n      });\n  }\n\n  updateCustomer = event => {\n    event.preventDefault();\n    console.log(\"Customer to update \", this.state.customerSelected);\n    api.post(\"/customers\", this.state.customerSelected).then((response) => {\n      let customers = this.state.customers;\n      customers.push(response.data);\n      this.setState({customers: customers, creatingNew: false, openEdit: false});\n    })\n    .catch(function (error) {\n      // handle error\n      console.log(error);\n    });\n  }\n\n  cancelEdit = event => {\n    event.preventDefault();\n    this.setState({creatingNew: false, openEdit: false});\n  }\n\n  renderRow(customer) {\n    return (\n      <tr key={customer.email}>\n        <td>{customer.name}</td>\n        <td>{customer.email}</td>\n        <td><Moment format=\"DD-MMM-YYYY\">{customer.birthday}</Moment></td>\n        <td className=\"editRow\" ><FontAwesomeIcon icon={faEdit} /></td>\n        <td className=\"editRow\" onClick={() => this.openConfirmDialog(customer)}><FontAwesomeIcon icon={faTrash} /></td>\n      </tr>\n    );\n  }\n\n  \n  render() {\n    \n    const {openConfirmDelete, customerSelected, openEdit, creatingNew } = this.state;\n    return (\n        <div>\n          <Button color=\"primary\" className=\"addCustomer\" onClick={this.addNewCustomer}>Add</Button>{' '}\n\n          <Table striped>\n            <thead>\n              <tr>\n                <th>Name</th>\n                <th>Email</th>\n                <th>Birthday</th>\n                <th></th>\n                <th></th>\n              </tr>\n            </thead>\n            <tbody>\n              { this.state.customers.map(this.renderRow, this) }\n            </tbody>\n          </Table>\n         \n          <Modal isOpen={openConfirmDelete}>\n            <ModalHeader >Confirm Delete</ModalHeader>\n            <ModalBody>\n              Are you sure to delete the customer {customerSelected.name}? \n            </ModalBody>\n            <ModalFooter>\n              <Button color=\"primary\" onClick={() => this.deleteRow(customerSelected)}>Confirm</Button>{' '}\n              <Button color=\"secondary\" >Cancel</Button>\n            </ModalFooter>\n          </Modal>\n\n          <Modal isOpen={openEdit}>\n          <Form className=\"form\" onSubmit={this.updateCustomer}>\n            <ModalHeader >{creatingNew ? 'New Customer': 'Edit Customer'}</ModalHeader>\n            <ModalBody>\n           \n         \n          <Col>\n            <FormGroup>\n              <Label for=\"name\">Name</Label>\n              <Input\n                type=\"text\"\n                name=\"name\"\n                id=\"name\"\n                placeholder=\"Name\" required\n                onChange={e => {\n                  customerSelected.name = e.target.value;\n                  this.setState({ customerSelected: customerSelected })\n                }}\n              />\n            </FormGroup>\n          </Col>\n          <Col>\n            <FormGroup>\n              <Label for=\"email\">Email</Label>\n              <Input\n                type=\"email\"\n                id=\"email\"\n                placeholder=\"email\" required\n                onChange={e => {\n                  customerSelected.email = e.target.value;\n                  this.setState({ customerSelected: customerSelected })\n                }}\n              />\n            </FormGroup>\n          </Col>\n          <Col>\n            <FormGroup>\n              <Label for=\"birthday\">Birthday</Label><br/>\n              <Input\n                type=\"date\"\n                id=\"birthday\"\n                placeholder=\"Birthday\" required\n                onChange={e => {\n                  customerSelected.birthday = e.target.value;\n                  this.setState({ customerSelected: customerSelected })\n                }}\n              />\n\n             \n             \n            </FormGroup>\n          </Col>\n        \n            </ModalBody>\n            <ModalFooter>\n              <Button color=\"primary\">Submit</Button>{' '}\n              <Button color=\"secondary\" onClick={this.cancelEdit}>Cancel</Button>\n            </ModalFooter>\n            </Form>\n          </Modal>\n\n          \n        </div>\n    );\n  }\n}\n\nexport default CustomerManager;\n"]},"metadata":{},"sourceType":"module"}