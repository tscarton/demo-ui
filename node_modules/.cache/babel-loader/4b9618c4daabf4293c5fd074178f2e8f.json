{"ast":null,"code":"var _jsxFileName = \"/Users/tscarton/Scarton/Pessoal/dev/workspace/spring/demo-ui/src/components/Customer/CustomerManager.js\";\nimport React from 'react';\nimport './CustomerManager.scss';\nimport api from \"../../services/api\";\nimport { Table, Button, Modal, ModalHeader, ModalBody, ModalFooter, Container, Col, Form, FormGroup, Label, Input, Alert } from 'reactstrap';\nimport Moment from 'react-moment';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEdit, faTrash } from '@fortawesome/free-solid-svg-icons';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nclass CustomerManager extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.deleteRow = customer => {\n      api.post(\"/customers/delete\", customer).then(response => {\n        let customers = this.state.customers.filter(function (cust) {\n          return cust.email !== customer.email;\n        });\n        this.setState({\n          customers: customers\n        });\n        this.closeConfirmDialog();\n      }).catch(function (error) {\n        console.log(error);\n      });\n    };\n\n    this.closeConfirmDialog = e => {\n      this.setState({\n        openConfirmDelete: false\n      });\n    };\n\n    this.openConfirmDialog = e => {\n      this.setState({\n        openConfirmDelete: true,\n        customerSelected: e\n      });\n    };\n\n    this.openEditDialog = e => {\n      let customerSelected;\n\n      if (e == null) {\n        customerSelected = {\n          name: \"\",\n          email: \"\",\n          birthday: new Date()\n        };\n      } else {\n        customerSelected = e;\n      }\n\n      this.setState({\n        openEdit: true,\n        customerSelected: customerSelected\n      });\n    };\n\n    this.addNewCustomer = e => {\n      this.setState({\n        creatingNew: true\n      });\n      this.openEditDialog(null);\n    };\n\n    this.handleDate = date => {\n      this.setState({\n        selectedDate: date\n      });\n    };\n\n    this.updateCustomer = event => {\n      event.preventDefault();\n      console.log(\"Customer to update \", this.state.customerSelected);\n    };\n\n    this.state = {\n      customers: [],\n      openConfirmDelete: false,\n      openEdit: false,\n      customerSelected: {},\n      selectedDate: new Date()\n    };\n  }\n\n  componentDidMount() {\n    api.get(\"/customers\").then(response => {\n      this.setState({\n        \"customers\": response.data._embedded.customers\n      });\n    }).catch(function (error) {\n      // handle error\n      console.log(error);\n    });\n  }\n\n  renderRow(customer) {\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      key: customer.email,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }\n    }, customer.name), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }\n    }, customer.email), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Moment, {\n      format: \"DD-MMM-YYYY\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }\n    }, customer.birthday)), /*#__PURE__*/React.createElement(\"td\", {\n      className: \"editRow\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faEdit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 34\n      }\n    })), /*#__PURE__*/React.createElement(\"td\", {\n      className: \"editRow\",\n      onClick: () => this.openConfirmDialog(customer),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faTrash,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 82\n      }\n    })));\n  }\n\n  render() {\n    const CustomInput = props => /*#__PURE__*/React.createElement(Input, {\n      onClick: props.onClick,\n      value: props.date,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 36\n      }\n    });\n\n    const {\n      openConfirmDelete,\n      customerSelected,\n      openEdit,\n      creatingNew,\n      selectedDate\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      color: \"primary\",\n      className: \"addCustomer\",\n      onClick: this.addNewCustomer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }\n    }, \"Add\"), ' ', /*#__PURE__*/React.createElement(Table, {\n      striped: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }\n    }, \"Name\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }\n    }, \"Email\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }\n    }, \"Birthday\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }\n    }))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 13\n      }\n    }, this.state.customers.map(this.renderRow, this))), /*#__PURE__*/React.createElement(Modal, {\n      isOpen: openConfirmDelete,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(ModalHeader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 13\n      }\n    }, \"Confirm Delete\"), /*#__PURE__*/React.createElement(ModalBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 13\n      }\n    }, \"Are you sure to delete the customer \", customerSelected.name, \"?\"), /*#__PURE__*/React.createElement(ModalFooter, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      color: \"primary\",\n      onClick: () => this.deleteRow(customerSelected),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 15\n      }\n    }, \"Confirm\"), ' ', /*#__PURE__*/React.createElement(Button, {\n      color: \"secondary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 15\n      }\n    }, \"Cancel\"))), /*#__PURE__*/React.createElement(Modal, {\n      isOpen: openEdit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      className: \"form\",\n      onSubmit: this.updateCustomer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(ModalHeader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 13\n      }\n    }, creatingNew ? 'New Customer' : 'Edit Customer'), /*#__PURE__*/React.createElement(ModalBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 15\n      }\n    }, \"Name\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"name\",\n      id: \"name\",\n      placeholder: \"Name\",\n      required: true,\n      onChange: e => {\n        customerSelected.name = e.target.value;\n        this.setState({\n          customerSelected: customerSelected\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 15\n      }\n    }))), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 15\n      }\n    }, \"Email\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"email\",\n      id: \"email\",\n      placeholder: \"email\",\n      required: true,\n      onChange: e => {\n        customerSelected.email = e.target.value;\n        this.setState({\n          customerSelected: customerSelected\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 15\n      }\n    }))), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"birthday\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 15\n      }\n    }, \"Birthday\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 53\n      }\n    }), /*#__PURE__*/React.createElement(DatePicker, {\n      selected: customerSelected.birthday,\n      onChange: date => {\n        customerSelected.birthday = date;\n        this.setState({\n          customerSelected: customerSelected\n        });\n      },\n      dateFormat: \"dd-MMM-YYYY\",\n      showYearDropdown: true,\n      scrollableYearDropdown: true,\n      yearDropdownItemNumber: 50,\n      customInput: /*#__PURE__*/React.createElement(CustomInput, {\n        date: customerSelected.birthday,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 30\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 15\n      }\n    })))), /*#__PURE__*/React.createElement(ModalFooter, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 15\n      }\n    }, \"Submit\"), ' ', /*#__PURE__*/React.createElement(Button, {\n      color: \"secondary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 15\n      }\n    }, \"Cancel\")))));\n  }\n\n}\n\nexport default CustomerManager;","map":{"version":3,"sources":["/Users/tscarton/Scarton/Pessoal/dev/workspace/spring/demo-ui/src/components/Customer/CustomerManager.js"],"names":["React","api","Table","Button","Modal","ModalHeader","ModalBody","ModalFooter","Container","Col","Form","FormGroup","Label","Input","Alert","Moment","FontAwesomeIcon","faEdit","faTrash","DatePicker","CustomerManager","Component","constructor","props","deleteRow","customer","post","then","response","customers","state","filter","cust","email","setState","closeConfirmDialog","catch","error","console","log","e","openConfirmDelete","openConfirmDialog","customerSelected","openEditDialog","name","birthday","Date","openEdit","addNewCustomer","creatingNew","handleDate","date","selectedDate","updateCustomer","event","preventDefault","componentDidMount","get","data","_embedded","renderRow","render","CustomInput","onClick","map","target","value"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './CustomerManager.scss';\nimport api from \"../../services/api\";\nimport { Table, Button, Modal, ModalHeader, ModalBody, ModalFooter,\n  Container, Col, Form,\n  FormGroup, Label, Input,\n   Alert } from 'reactstrap';\nimport Moment from 'react-moment';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEdit, faTrash } from '@fortawesome/free-solid-svg-icons';\nimport DatePicker from \"react-datepicker\";\n \nimport \"react-datepicker/dist/react-datepicker.css\";\n\nclass CustomerManager extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      customers : [],\n      openConfirmDelete: false,\n      openEdit: false,\n      customerSelected: {},\n      selectedDate: new Date()\n    }\n  }\n\n  deleteRow = (customer) => {\n\n    api.post(\"/customers/delete\", customer).then((response) => {\n      let customers = this.state.customers.filter(function(cust) { \n        return cust.email !== customer.email\n      })\n      this.setState({customers: customers});\n      this.closeConfirmDialog();\n    })\n    .catch(function (error) {\n      console.log(error);\n    });\n\n   \n  }\n\n  closeConfirmDialog = e => {\n    this.setState({openConfirmDelete: false});\n  }\n\n  openConfirmDialog = e => {\n    this.setState({openConfirmDelete: true, customerSelected: e});\n  }\n\n  openEditDialog = e => {\n    let customerSelected;\n    if (e == null) {\n      customerSelected = {\n        name: \"\",\n        email: \"\",\n        birthday: new Date()\n      };\n    } else {\n      customerSelected = e;\n    }\n    this.setState({openEdit: true, customerSelected: customerSelected});\n  }\n\n  addNewCustomer = e => {\n    this.setState({creatingNew: true});\n    this.openEditDialog(null);\n  }\n\n  componentDidMount() {\n      api.get(\"/customers\").then((response) => {\n        this.setState({\"customers\": response.data._embedded.customers});\n      })\n      .catch(function (error) {\n        // handle error\n        console.log(error);\n      });\n  }\n\n  handleDate = date => {\n    this.setState({ selectedDate: date });\n  }\n\n  updateCustomer = event => {\n    event.preventDefault();\n    console.log(\"Customer to update \", this.state.customerSelected);\n  }\n\n  renderRow(customer) {\n    return (\n      <tr key={customer.email}>\n        <td>{customer.name}</td>\n        <td>{customer.email}</td>\n        <td><Moment format=\"DD-MMM-YYYY\">{customer.birthday}</Moment></td>\n        <td className=\"editRow\" ><FontAwesomeIcon icon={faEdit} /></td>\n        <td className=\"editRow\" onClick={() => this.openConfirmDialog(customer)}><FontAwesomeIcon icon={faTrash} /></td>\n      </tr>\n    );\n  }\n\n  \n  render() {\n    const CustomInput = props => ( <Input onClick={props.onClick} value={props.date} /> );\n\n    const {openConfirmDelete, customerSelected, openEdit, creatingNew, selectedDate } = this.state;\n    return (\n        <div>\n          <Button color=\"primary\" className=\"addCustomer\" onClick={this.addNewCustomer}>Add</Button>{' '}\n\n          <Table striped>\n            <thead>\n              <tr>\n                <th>Name</th>\n                <th>Email</th>\n                <th>Birthday</th>\n                <th></th>\n                <th></th>\n              </tr>\n            </thead>\n            <tbody>\n              { this.state.customers.map(this.renderRow, this) }\n            </tbody>\n          </Table>\n         \n          <Modal isOpen={openConfirmDelete}>\n            <ModalHeader >Confirm Delete</ModalHeader>\n            <ModalBody>\n              Are you sure to delete the customer {customerSelected.name}? \n            </ModalBody>\n            <ModalFooter>\n              <Button color=\"primary\" onClick={() => this.deleteRow(customerSelected)}>Confirm</Button>{' '}\n              <Button color=\"secondary\" >Cancel</Button>\n            </ModalFooter>\n          </Modal>\n\n          <Modal isOpen={openEdit}>\n          <Form className=\"form\" onSubmit={this.updateCustomer}>\n            <ModalHeader >{creatingNew ? 'New Customer': 'Edit Customer'}</ModalHeader>\n            <ModalBody>\n           \n         \n          <Col>\n            <FormGroup>\n              <Label for=\"name\">Name</Label>\n              <Input\n                type=\"text\"\n                name=\"name\"\n                id=\"name\"\n                placeholder=\"Name\" required\n                onChange={e => {\n                  customerSelected.name = e.target.value;\n                  this.setState({ customerSelected: customerSelected })\n                }}\n              />\n            </FormGroup>\n          </Col>\n          <Col>\n            <FormGroup>\n              <Label for=\"email\">Email</Label>\n              <Input\n                type=\"email\"\n                id=\"email\"\n                placeholder=\"email\" required\n                onChange={e => {\n                  customerSelected.email = e.target.value;\n                  this.setState({ customerSelected: customerSelected })\n                }}\n              />\n            </FormGroup>\n          </Col>\n          <Col>\n            <FormGroup>\n              <Label for=\"birthday\">Birthday</Label><br/>\n              <DatePicker \n              selected={customerSelected.birthday}\n               onChange={date=> {\n                  customerSelected.birthday = date;\n                  this.setState({ customerSelected: customerSelected })\n                }}\n                dateFormat=\"dd-MMM-YYYY\"\n                showYearDropdown scrollableYearDropdown yearDropdownItemNumber={50} \n                customInput={<CustomInput date={customerSelected.birthday} />} />\n             \n             \n            </FormGroup>\n          </Col>\n        \n            </ModalBody>\n            <ModalFooter>\n              <Button color=\"primary\">Submit</Button>{' '}\n              <Button color=\"secondary\" >Cancel</Button>\n            </ModalFooter>\n            </Form>\n          </Modal>\n\n          \n        </div>\n    );\n  }\n}\n\nexport default CustomerManager;\n"]},"metadata":{},"sourceType":"module"}